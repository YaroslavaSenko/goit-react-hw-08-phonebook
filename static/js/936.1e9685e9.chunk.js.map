{"version":3,"file":"static/js/936.1e9685e9.chunk.js","mappings":"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","sources":["components/ContactForm/Form/ContactForm.styled.js","components/ContactForm/Form/Form.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactsListItem.styled.js","components/ContactListItem/ContactListItem.jsx","redux/filter/filterSelectors.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\ndisplay: block;\nmargin-top: 20px;\nmargin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\npadding: 10px;\nbackground-color: white;\nborder: 1px solid #d8e4e2;\nborder-radius: 8px;\n`;\n\nexport const SubmitButton = styled.button`\npadding: 8px 15px;\nmargin: 10px;\nfont-size: 12px;\ncursor: pointer;\ntext-align: center;\ntext-decoration: none;\ncolor: #fff;\nbackground-color: #4CAF50;\nborder: none;\nborder-radius: 15px;\n`;\n\n\nexport const FormLabel = styled.label`\n  margin-right: 15px;\n`;\n\n\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {ContactForm, FormInput, SubmitButton, FormLabel} from './ContactForm.styled';\n\nexport const Form = ({ name = '', number = '', btnText, onSubmit }) => {\n  const [contactName, setContactName] = useState(name);\n  const [contactNumber, setContactNumber] = useState(number);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value.trim();\n    const number = form.elements.number.value.trim();\n\n    if (name === '' || number === '') {\n      return alert('Fill all fields');\n    }\n\n    const contactToAdd = {\n      name,\n      number,\n    };\n    onSubmit(contactToAdd);\n\n    setContactName('');\n    setContactNumber('');\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setContactName(value);\n        break;\n\n      case 'number':\n        setContactNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ContactForm onSubmit={formSubmitHandler}>\n      <FormLabel>\n        <h3>Name</h3>\n        \n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        <h3>Number</h3>        \n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          onChange={handleChange}\n          value={contactNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n<br />\n      <SubmitButton type=\"submit\">{btnText}</SubmitButton>\n    </ContactForm>\n  );\n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  btnText: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useAddContactMutation } from 'redux/contacts/contactsSlice';\nimport { Form } from './Form/Form';\n\nexport const ContactForm = ({ data }) => {\n  const [addContact] = useAddContactMutation();\n\n  const formSubmitHandler = contactToAdd => {\n    const nameMatches = data.find(\n      contact => contact.name.toLowerCase() === contactToAdd.name.toLowerCase()\n    );\n\n    if (nameMatches) {\n      return alert(`${contactToAdd.name} is already in contacts.`);\n    }\n\n    addContact(contactToAdd);\n    \n  };\n\n  return <Form onSubmit={formSubmitHandler} btnText=\"Add contact\" />;\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  color: black;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: 18px;\n  \n`;\n\nexport const DeleteBtn = styled.button`\n padding: 8px 15px;\nmargin: 10px;\nfont-size: 12px;\ncursor: pointer;\ntext-align: center;\ntext-decoration: none;\ncolor: #fff;\nbackground-color: #4CAF50;\nborder: none;\nborder-radius: 15px;\nmargin-left: 20px;\n`;\n\n","import React from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport { Contact, DeleteBtn } from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <Contact>\n      {name}: {number}\n      <DeleteBtn type=\"button\" id={id} onClick={() => deleteContact(id)}>\n        Delete\n      </DeleteBtn>\n    </Contact>\n  );\n};\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n// import { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactsListItem } from 'components/ContactListItem/ContactListItem';\nimport { getFilter } from 'redux/filter/filterSelectors';\n\nexport const ContactsList = ({ data }) => {\n  // const { data: contacts } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n  const visibleContacts = !data\n    ? []\n    : data.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n\n  return (\n    <>\n      {data?.length === 0 ? (\n        <p>No contacts yet</p>\n      ) : (\n        <>\n          <p>Total contacts: {visibleContacts.length}</p>\n          <ul>\n            {visibleContacts.map(({ id, name, number }) => (\n              <ContactsListItem key={id} id={id} name={name} number={number} />\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\npadding: 10px;\nbackground-color: white;\nborder: 1px solid #d8e4e2;\nborder-radius: 8px;\nmargin-left: 20px;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/filter/filterSelectors';\nimport { FilterLabel, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n    return(\n      <FilterLabel>\n        Find contacts by name\n        <br />\n        <Input type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        name=\"filter\"\n        />\n    </FilterLabel>  \n    )\n};\n","import { useFetchContactsQuery } from 'redux/contacts/contactsSlice';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const { data, error, isFetching } = useFetchContactsQuery(\n    { count: 5 },\n    { refetchOnMountOrArgChange: true }\n  );\n  return (\n    <div>\n      <ContactForm data={data} />\n      <h2>Contacts</h2>\n      <Filter />\n\n      {data && <ContactsList data={data} />}\n      {isFetching && !error && <Loader />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","styled","FormInput","SubmitButton","FormLabel","Form","name","number","btnText","onSubmit","useState","contactName","setContactName","contactNumber","setContactNumber","handleChange","e","target","value","preventDefault","form","elements","trim","alert","reset","type","onChange","pattern","title","required","data","useAddContactMutation","addContact","contactToAdd","find","contact","toLowerCase","Contact","DeleteBtn","ContactsListItem","id","useDeleteContactMutation","deleteContact","onClick","getFilter","state","filter","ContactsList","useSelector","visibleContacts","includes","length","map","FilterLabel","Input","Filter","dispatch","useDispatch","setFilter","currentTarget","useFetchContactsQuery","count","refetchOnMountOrArgChange","error","isFetching","Loader"],"sourceRoot":""}